****************
Upgrade database
****************

/!\ WARNING - all the database version control system uses git tags to switch between code versions. 
Some GIT client configurations do not fetch tags by default and the whole process will fail. 
If you end up with errors indicating version is still 0.1 or saying not tag could be found, please read this:
https://stackoverflow.com/questions/8432953/if-a-git-tag-changes-on-remote-a-git-fetch-does-not-update-it-locally-is-this

See online documentation for more informations.

How to use the upgrade_db.sh script ?
=====================================

.. notice:: Your *.pg_service.conf* must contain connexions to qwat, qwat_test and qwat_conform DB

You need to edit upgrade_db.sh and change the settings :

    * SRCDB=qwat  -- main DB
    * TESTDB=qwat_test -- name for the test DB
    * TESTCONFORMDB=qwat_test_conform -- name for the second test DB
    * USER=test -- DB user
    * HOST=localhost -- DB host
    * QWATSERVICE=qwat -- Service for the main DB
    * QWATSERVICETEST=qwat_test -- Service for the test DB
    * QWATSERVICETESTCONFORM=qwat_test_conform -- Service for the second test DB

Launch *./upgrade_db.sh* and follow the instructions.
At first, the DB password will be asked.
The process will create a qwat_test and a qwat_test_conform DB.

If the process is successfull, you will be able to migrate your real database by lauching the command again with " --upgrade yes " parameter. Otherwise, the process is only launched on test DB.

**************
Debuging Hints
**************
On https://github.com/qwat/qwat-data-model/blob/master/update/upgrade_db.sh#L136

   --single-transaction --exit-on-error 

Can be problematic on restore : see https://lists.osgeo.org/pipermail/postgis-users/2015-November/040950.html

Avoiding quiet mode -q can be a great help to determine which query is failing.
